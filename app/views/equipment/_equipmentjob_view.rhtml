&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp; 
<b>Equipment Usage</b> 

<!-- Div for capture of grid output -->
 <div id="equipmentjob_grid" style="width:380px; height:300px;">

 </div>

<!-- script for dhtmlxgrid -->
 <script type="text/javascript" charset="utf-8">

	// data grid definition
     var equipmentjobgrid = new dhtmlXGridObject("equipmentjob_grid");
     equipmentjobgrid.setImagePath("/images/");
     equipmentjobgrid.setHeader("Job task, Job date, Hours ");  
     equipmentjobgrid.setInitWidths("200, 100, 100");
     equipmentjobgrid.setSkin("dhx_web");
     equipmentjobgrid.init();
	 equipmentjobgrid.load("/equipmentjobdata");  	
	 equipmentjobgrid.attachHeader("#text_filter,#text_filter,");    
	 equipmentjobgrid.setColSorting("str,str,");	 
	 equipmentjobgrid.setColTypes("ro,ro,ro"); // ed-editable, ro-read only price-money , ch-checkbox, 
											// txt-text editor ra-radio button, coro-select box, img, dhxcalendar 
											//  subrow (ajax)	 
	// data processor definition
	dp = new dataProcessor("/equipmentjobgridaction");
	//dp.setTransactionMode("POST", true);
	//set mode as send-all-by-post;
	//dp.setUpdateMode("on");
	dp.init(equipmentjobgrid);
		// in grid validations
	//	dp.setVerificator(0, not_empty);
	//	dp.setVerificator(1, not_empty);
	//	dp.setVerificator(2, not_empty);

	
	// handle XML errors	
	function myErrorHandler(type,name,p){
		alert('Error. The record was not updated. Click OK to view the error.')
		//	window.location = "/parties_view"
	}
	


	// remove row from grid and database
    function removeEquipmentjobRow(){
	
		var selId = equipmentjobgrid.getSelectedId()
	
		if (selId < 1)
			{
			 alert("No record was selected for deletion");	
			}
		else
			{
		var r=confirm("Are you sure you want to delete this record?");
		if (r==true)
		  {
			
	        equipmentjobgrid.deleteRow(selId);
		  	alert("Record deleted");
		  }
		else
		  {
		  alert("Delete cancelled");
		  }
		}
	  }

	// in grid validation for required string
	function not_empty(value) {
	    return value != "";
	}
	// in grid validation for required integer
	function greater_0(value) {
	    return value > 0;
	}
	
	// branch to rails for record addition
	function newEquipmentjob() {
	// branch to add new crop
	    window.location = "/farmjobequipments/new";
	}
	// branch to rails for edit record
	function editEquipmentjob() {
	// edit selected crop
	var selId = equipmentjobgrid.getSelectedId()
	if (selId < 1)
		{
		 alert("No record was selected for full edit");	
		}
	else {
	    window.location = "farmjobequipments/"+selId+"/edit";
		}
	}
	

 	
 </script>

<br>

 
<br><br> 

